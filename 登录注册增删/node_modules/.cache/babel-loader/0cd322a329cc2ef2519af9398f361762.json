{"ast":null,"code":"import Mock from \"mockjs\";\nlet data = Mock.mock({\n  \"list|8\": [{\n    \"username|+1\": [\"aaa\", \"bbb\", \"ccc\", \"ddd\", \"user\", \"eee\", \"111\", \"222\"],\n    \"password\": \"111\"\n  }]\n});\nMock.mock(\"/login\", \"post\", function (options) {\n  let _JSON$parse = JSON.parse(options.body),\n      username = _JSON$parse.username,\n      password = _JSON$parse.password;\n\n  let succeed = data.list.find((item, index) => {\n    return item.username === username && item.password === password;\n  });\n\n  if (succeed) {\n    return {\n      status: 200,\n      msg: \"登录成功\"\n    };\n  } else {\n    return {\n      status: 400,\n      msg: \"登录失败\"\n    };\n  }\n});\nMock.mock(\"/banner\", \"post\", {\n  \"list\": [{\n    id: 1,\n    pic: \"/img/1.jpg\"\n  }, {\n    id: 2,\n    pic: \"/img/2.jpg\"\n  }, {\n    id: 3,\n    pic: \"/img/3.jpg\"\n  }, {\n    id: 4,\n    pic: \"/img/4.jpg\"\n  }, {\n    id: 5,\n    pic: \"/img/5.jpg\"\n  }]\n});\nMock.mock(\"/bannerText\", \"post\", {\n  \"list|5\": [{\n    \"id|+1\": 1,\n    text: \"@cparagraph(2)\"\n  }]\n});\nMock.mock(\"/pagination\", \"post\", function name(options) {\n  let _JSON$parse2 = JSON.parse(options.body),\n      page = _JSON$parse2.page,\n      count = _JSON$parse2.count;\n\n  let data = Mock.mock({\n    \"list|1000\": [{\n      \"id|+1\": 1,\n      pic: \"@image('100x100',@color,@ctitle)\",\n      title: \"@ctitle\",\n      text: \"@paragraph(2)\"\n    }]\n  });\n});","map":{"version":3,"sources":["C:\\Users\\王山\\Desktop\\登录注册增删\\src\\mock\\mock.js"],"names":["Mock","data","mock","options","JSON","parse","body","username","password","succeed","list","find","item","index","status","msg","id","pic","text","name","page","count","title"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,IAAIC,IAAI,GAACD,IAAI,CAACE,IAAL,CAAU;AACf,YAAS,CACL;AACI,mBAAc,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,MAAzB,EAAgC,KAAhC,EAAsC,KAAtC,EAA4C,KAA5C,CADlB;AAEI,gBAAW;AAFf,GADK;AADM,CAAV,CAAT;AAQAF,IAAI,CAACE,IAAL,CAAU,QAAV,EAAmB,MAAnB,EAA0B,UAAUC,OAAV,EAAkB;AAAA,oBACdC,IAAI,CAACC,KAAL,CAAWF,OAAO,CAACG,IAAnB,CADc;AAAA,MACnCC,QADmC,eACnCA,QADmC;AAAA,MAC1BC,QAD0B,eAC1BA,QAD0B;;AAExC,MAAIC,OAAO,GAAGR,IAAI,CAACS,IAAL,CAAUC,IAAV,CAAe,CAACC,IAAD,EAAMC,KAAN,KAAc;AACvC,WAAOD,IAAI,CAACL,QAAL,KAAgBA,QAAhB,IAA2BK,IAAI,CAACJ,QAAL,KAAkBA,QAApD;AACH,GAFa,CAAd;;AAGA,MAAGC,OAAH,EAAW;AACP,WAAO;AACHK,MAAAA,MAAM,EAAC,GADJ;AAEHC,MAAAA,GAAG,EAAC;AAFD,KAAP;AAIH,GALD,MAKK;AACD,WAAO;AACHD,MAAAA,MAAM,EAAC,GADJ;AAEHC,MAAAA,GAAG,EAAC;AAFD,KAAP;AAIH;AACJ,CAhBD;AAiBAf,IAAI,CAACE,IAAL,CAAU,SAAV,EAAoB,MAApB,EAA2B;AACvB,UAAO,CACH;AACIc,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,GAAG,EAAC;AAFR,GADG,EAKH;AACID,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,GAAG,EAAC;AAFR,GALG,EASH;AACID,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,GAAG,EAAC;AAFR,GATG,EAaH;AACID,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,GAAG,EAAC;AAFR,GAbG,EAiBH;AACID,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,GAAG,EAAC;AAFR,GAjBG;AADgB,CAA3B;AAwBAjB,IAAI,CAACE,IAAL,CAAU,aAAV,EAAwB,MAAxB,EAA+B;AAC3B,YAAS,CACL;AACI,aAAQ,CADZ;AAEIgB,IAAAA,IAAI,EAAC;AAFT,GADK;AADkB,CAA/B;AAQAlB,IAAI,CAACE,IAAL,CAAU,aAAV,EAAwB,MAAxB,EAA+B,SAASiB,IAAT,CAAchB,OAAd,EAAuB;AAAA,qBAC/BC,IAAI,CAACC,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAD+B;AAAA,MAC7Cc,IAD6C,gBAC7CA,IAD6C;AAAA,MACxCC,KADwC,gBACxCA,KADwC;;AAElD,MAAIpB,IAAI,GAACD,IAAI,CAACE,IAAL,CAAU;AACf,iBAAY,CAAC;AACT,eAAQ,CADC;AAETe,MAAAA,GAAG,EAAC,kCAFK;AAGTK,MAAAA,KAAK,EAAC,SAHG;AAITJ,MAAAA,IAAI,EAAC;AAJI,KAAD;AADG,GAAV,CAAT;AAQH,CAVD","sourcesContent":["import Mock from \"mockjs\";\r\n\r\nlet data=Mock.mock({\r\n    \"list|8\":[\r\n        {\r\n            \"username|+1\":[\"aaa\",\"bbb\",\"ccc\",\"ddd\",\"user\",\"eee\",\"111\",\"222\"],\r\n            \"password\":\"111\"\r\n        }\r\n    ]\r\n})\r\nMock.mock(\"/login\",\"post\",function (options){\r\n    let {username,password} = JSON.parse(options.body)\r\n    let succeed = data.list.find((item,index)=>{\r\n        return item.username===username&& item.password === password;\r\n    })\r\n    if(succeed){\r\n        return {\r\n            status:200,\r\n            msg:\"登录成功\"\r\n        }\r\n    }else{\r\n        return {\r\n            status:400,\r\n            msg:\"登录失败\"\r\n        }\r\n    }\r\n})\r\nMock.mock(\"/banner\",\"post\",{\r\n    \"list\":[\r\n        {\r\n            id:1,\r\n            pic:\"/img/1.jpg\"\r\n        },\r\n        {\r\n            id:2,\r\n            pic:\"/img/2.jpg\"\r\n        },\r\n        {\r\n            id:3,\r\n            pic:\"/img/3.jpg\"\r\n        },\r\n        {\r\n            id:4,\r\n            pic:\"/img/4.jpg\"\r\n        },\r\n        {\r\n            id:5,\r\n            pic:\"/img/5.jpg\"\r\n        }\r\n    ]\r\n})\r\nMock.mock(\"/bannerText\",\"post\",{\r\n    \"list|5\":[\r\n        {\r\n            \"id|+1\":1,\r\n            text:\"@cparagraph(2)\"\r\n        }\r\n    ]\r\n})\r\nMock.mock(\"/pagination\",\"post\",function name(options) {\r\n    let {page,count} = JSON.parse(options.body);\r\n    let data=Mock.mock({\r\n        \"list|1000\":[{\r\n            \"id|+1\":1,\r\n            pic:\"@image('100x100',@color,@ctitle)\",\r\n            title:\"@ctitle\",\r\n            text:\"@paragraph(2)\"\r\n        }]\r\n    })\r\n})"]},"metadata":{},"sourceType":"module"}